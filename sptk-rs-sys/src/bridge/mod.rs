
//         include!("SPTK/check/line_spectral_pairs_stability_check.h");
//         include!("SPTK/check/linear_predictive_coefficients_stability_check.h");
//         include!("SPTK/check/mlsa_digital_filter_stability_check.h");
//         include!("SPTK/compression/a_law_compression.h");
//         include!("SPTK/compression/a_law_expansion.h");
//         include!("SPTK/compression/dynamic_range_compression.h");
//         include!("SPTK/compression/huffman_coding.h");
//         include!("SPTK/compression/huffman_decoding.h");
//         include!("SPTK/compression/huffman_encoding.h");
//         include!("SPTK/compression/inverse_multistage_vector_quantization.h");
//         include!("SPTK/compression/inverse_uniform_quantization.h");
//         include!("SPTK/compression/inverse_vector_quantization.h");
//         include!("SPTK/compression/linde_buzo_gray_algorithm.h");
//         include!("SPTK/compression/mu_law_compression.h");
//         include!("SPTK/compression/mu_law_expansion.h");
//         include!("SPTK/compression/multistage_vector_quantization.h");
//         include!("SPTK/compression/uniform_quantization.h");
//         include!("SPTK/compression/vector_quantization.h");
//         include!("SPTK/conversion/all_pole_to_all_zero_digital_filter_coefficients.h");
//         include!("SPTK/conversion/autocorrelation_to_composite_sinusoidal_modeling.h");
//         include!("SPTK/conversion/cepstrum_to_autocorrelation.h");
//         include!("SPTK/conversion/cepstrum_to_minimum_phase_impulse_response.h");
//         include!("SPTK/conversion/cepstrum_to_negative_derivative_of_phase_spectrum.h");
//         include!("SPTK/conversion/composite_sinusoidal_modeling_to_autocorrelation.h");
//         include!("SPTK/conversion/filter_coefficients_to_group_delay.h");
//         include!("SPTK/conversion/filter_coefficients_to_phase_spectrum.h");
//         include!("SPTK/conversion/filter_coefficients_to_spectrum.h");
//         include!("SPTK/conversion/generalized_cepstrum_gain_normalization.h");
//         include!("SPTK/conversion/generalized_cepstrum_inverse_gain_normalization.h");
//         include!("SPTK/conversion/line_spectral_pairs_to_linear_predictive_coefficients.h");
//         include!("SPTK/conversion/linear_predictive_coefficients_to_cepstrum.h");
//         include!("SPTK/conversion/linear_predictive_coefficients_to_line_spectral_pairs.h");
//         include!("SPTK/conversion/linear_predictive_coefficients_to_parcor_coefficients.h");
//         include!("SPTK/conversion/log_area_ratio_to_parcor_coefficients.h");
//         include!("SPTK/conversion/mel_cepstrum_inverse_power_normalization.h");
//         include!("SPTK/conversion/mel_cepstrum_power_normalization.h");
//         include!("SPTK/conversion/mel_cepstrum_to_mlsa_digital_filter_coefficients.h");
//         include!("SPTK/conversion/mel_generalized_cepstrum_to_mel_generalized_cepstrum.h");
//         include!("SPTK/conversion/mel_generalized_cepstrum_to_spectrum.h");
//         include!("SPTK/conversion/mel_generalized_line_spectral_pairs_to_spectrum.h");
//         include!("SPTK/conversion/minimum_phase_impulse_response_to_cepstrum.h");
//         include!("SPTK/conversion/mlsa_digital_filter_coefficients_to_mel_cepstrum.h");
//         include!("SPTK/conversion/negative_derivative_of_phase_spectrum_to_cepstrum.h");
//         include!("SPTK/conversion/parcor_coefficients_to_linear_predictive_coefficients.h");
//         include!("SPTK/conversion/parcor_coefficients_to_log_area_ratio.h");
//         include!("SPTK/conversion/spectrum_to_autocorrelation.h");
//         include!("SPTK/conversion/spectrum_to_spectrum.h");
//         include!("SPTK/conversion/waveform_to_autocorrelation.h");
//         include!("SPTK/conversion/waveform_to_spectrum.h");
//         include!("SPTK/filter/all_pole_digital_filter.h");
//         include!("SPTK/filter/all_pole_lattice_digital_filter.h");
//         include!("SPTK/filter/all_zero_digital_filter.h");
//         include!("SPTK/filter/all_zero_lattice_digital_filter.h");
//         include!("SPTK/filter/infinite_impulse_response_digital_filter.h");
//         include!("SPTK/filter/inverse_mglsa_digital_filter.h");
//         include!("SPTK/filter/inverse_pseudo_quadrature_mirror_filter_banks.h");
//         include!("SPTK/filter/line_spectral_pairs_digital_filter.h");
//         include!("SPTK/filter/median_filter.h");
//         include!("SPTK/filter/mglsa_digital_filter.h");
//         include!("SPTK/filter/mlsa_digital_filter.h");
//         include!("SPTK/filter/pseudo_quadrature_mirror_filter_banks.h");
//         include!("SPTK/filter/second_order_digital_filter.h");
//         include!("SPTK/filter/world_synthesis.h");
//         include!("SPTK/generation/delta_calculation.h");
//         include!("SPTK/generation/excitation_generation.h");
//         include!("SPTK/generation/m_sequence_generation.h");
//         include!("SPTK/generation/nonrecursive_maximum_likelihood_parameter_generation.h");
//         include!("SPTK/generation/normal_distributed_random_value_generation.h");
//         include!("SPTK/generation/periodic_waveform_generation.h");
//         include!("SPTK/generation/recursive_maximum_likelihood_parameter_generation.h");
//         include!("SPTK/input/input_source_delay.h");
//         include!("SPTK/input/input_source_filling_magic_number.h");
//         include!("SPTK/input/input_source_from_array.h");
//         include!("SPTK/input/input_source_from_matrix.h");
//         include!("SPTK/input/input_source_from_stream.h");
//         include!("SPTK/input/input_source_from_vector.h");
//         include!("SPTK/input/input_source_interpolation.h");
//         include!("SPTK/input/input_source_interpolation_with_magic_number.h");
//         include!("SPTK/input/input_source_preprocessing_for_filter_gain.h");

//         include!("SPTK/postfilter/mel_cepstrum_postfilter.h");
//         include!("SPTK/utils/data_symmetrizing.h");
//         include!("SPTK/utils/misc_utils.h");
//         include!("SPTK/utils/sptk_utils.h");
//         include!("SPTK/window/chebyshev_window.h");
//         include!("SPTK/window/cosine_window.h");
//         include!("SPTK/window/data_windowing.h");
//         include!("SPTK/window/kaiser_window.h");
//         include!("SPTK/window/standard_window.h");

pub mod math;
pub mod analysis;